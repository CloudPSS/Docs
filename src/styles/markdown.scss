@use 'sass:map';
@use "sass:color";
@use '@angular/material' as mat;
@import '~katex/dist/katex.css';

// block quotes and def lists
@mixin quote-color($palette, $char: false) {
  $quotebg: rgba(map.get($palette, A100), 0.05);
  $quotebd: rgba(map.get($palette, A200), 0.2);
  $qoutefg: map.get($palette, 400);
  background-color: $quotebg;
  @media print {
    background: white !important;
  }
  border: 0.02px solid $quotebd;
  border-left: 4px solid $qoutefg;
  @if $char {
    @media screen {
      &::before {
        content: $char;
        background-color: $qoutefg;
        @if (lightness($qoutefg) > 60) {
          color: #000;
        } @else {
          color: #fff;
        }
        color: #fff;
      }
    }
  }
}

@mixin markdown-color($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);

  $primary: map.get($config, primary);
  $warn: map.get($config, warn);
  $accent: map.get($config, accent);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);
  $is-dark: map.get($config, is-dark);

  $theme: map.get($primary, default);
  $bg: map.get($background, background);
  $border: color.mix(color.change(map.get($foreground, divider), $alpha: 1), $bg, 20%);
  $codebg: color.adjust($bg, $lightness: -3%);
  $shadow: map.get($foreground, icon);

  $primary-color: map.get($primary, 900);
  @if $is-dark {
    $primary-color: map.get($primary, 100);
  }

  // font sizes
  $body-font-size: 15px;
  $code-font-size: 0.9em;

  [markdown] {
    p,
    dd {
      word-spacing: 0.05em;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: $primary-color;
      a.header-anchor {
        color: $primary-color;
      }
    }
    abbr[title] {
      border-bottom-color: $border;
    }

    code:not([is]),
    samp {
      background-color: $codebg;
    }

    code:not([is]) {
      border-color: $border;
    }

    figcaption,
    caption {
      color: $primary-color;
    }
    pre {
      background-color: $codebg;
      &::before {
        color: $primary-color;
      }
    }

    dl,
    blockquote,
    details {
      @include quote-color($primary);
    }
    [is='md-container'] {
      &[class~='tip'] {
        @include quote-color($primary, '!');
      }
    }

    // table
    table {
      td,
      th {
        border: 1px solid $border;
      }
      > thead > tr > th {
        background-color: $border;
      }
      > thead > tr:nth-last-child(2n) > th {
        background-color: color.mix($border, $bg, 50%);
      }
      > tbody > tr > td {
        background-color: $bg;
      }
      > tbody > tr:nth-child(2n) > td {
        background-color: color.mix($border, $bg, 10%);
      }
      tr:hover > td {
        background-color: rgba(map.get($primary, A100), 0.1) !important;
      }
    }
  }
}

@mixin markdown-theme($config-or-theme) {
  $config: mat.get-color-config($config-or-theme);

  $primary: map.get($config, primary);
  $warn: map.get($config, warn);
  $accent: map.get($config, accent);
  $background: map.get($config, background);
  $foreground: map.get($config, foreground);
  $is-dark: map.get($config, is-dark);

  $theme: map.get($primary, default);
  $bg: map.get($background, background);
  $border: color.mix(color.change(map.get($foreground, divider), $alpha: 1), $bg, 20%);
  $codebg: color.adjust($bg, $lightness: -3%);
  $shadow: map.get($foreground, icon);

  $primary-color: map.get($primary, 900);
  @if $is-dark {
    $primary-color: map.get($primary, 100);
  }

  // font sizes
  $body-font-size: 15px;
  $code-font-size: 0.9em;

  @keyframes outline-blink {
    $c: var(--theme-primary-default);
    $tc: transparent;
    from {
      outline-color: $tc;
    }
    50% {
      outline-color: $c;
    }
    to {
      outline-color: $tc;
    }
  }

  [markdown] {
    color: var(--theme-foreground-base);
    background: var(--theme-background-background);
    @media print {
      background: white !important;
      color: black !important;
    }
  }

  [markdown] {
    .target,
    :target {
      outline: solid 2px;
      animation: outline-blink 0.8s 5 forwards;
    }
  }

  [markdown] {
    min-width: 0;
    * {
      scroll-behavior: smooth;
      scroll-margin: 20px;
    }
    .text-align-center {
      text-align: center;
    }
    p,
    dd {
      word-spacing: 0.05em;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 600;
      position: relative;
      a.header-anchor {
        position: absolute;
        left: 0;
        padding: 0 0.25em;
        transform: translateX(-100%);
        opacity: 0;
        transition: all 0.2s;
        &::before {
          content: 'Â¶';
        }
        &:focus {
          opacity: 1;
        }
        @media print {
          display: none;
        }
      }
      &:hover,
      &:focus,
      &:focus-within {
        a.header-anchor {
          opacity: 1;
        }
      }
    }
    h1,
    h2,
    h3 {
      page-break-after: avoid;
    }
    br {
      word-spacing: 0;
    }
    a {
      text-decoration: none;
      kbd,
      samp,
      code {
        color: inherit !important;
      }
      color: var(--theme-primary-text);
      & {
        &:hover {
          color: var(--theme-primary-darker);
        }
        &:active {
          color: var(--theme-primary-lighter);
        }
      }
      [color-scheme='dark'] & {
        &:hover {
          color: var(--theme-primary-lighter);
        }
        &:active {
          color: var(--theme-primary-darker);
        }
      }
      @media print {
        text-decoration: underline;
      }
    }
    p,
    dt,
    dd,
    summary {
      margin: 0.8em 0;
    }
    mark {
      background: rgba(map.get(mat.$yellow-palette, A700), 40%);
      color: var(--theme-foreground-text);
      @media print {
        background: none;
        color: #000;
        border: 2px solid map.get(mat.$yellow-palette, 500) !important;
      }
    }
    abbr[title] {
      cursor: help;
      text-decoration: none;
      border-bottom: 1px dotted;
      @media print {
        &:after {
          content: '(' attr(title) ')';
          border-bottom-color: #777;
          color: #777;
        }
      }
    }

    md-math {
      user-select: all;
      &[mode='display'] {
        display: block;
        text-align: center;
        page-break-before: avoid;
        page-break-inside: avoid;
        overflow: auto;
        margin: 0.8em 0;
      }
      &[mode='inline'] {
        display: inline;
        &:before,
        &:after {
          content: ' ';
          user-select: none;
        }
      }
      &[language='tex'] {
        display: inline;
        .katex-display,
        .katex {
          user-select: all;
        }
      }
      .error {
        color: var(--theme-warn-text);
      }
    }

    code:not([is]),
    kbd,
    samp {
      font-size: $code-font-size;
      @media print {
        background-color: white !important;
      }
    }

    kbd {
      display: inline-block;
      white-space: nowrap;
      border-radius: 3px;
      padding: 2px 6px;
      box-shadow: 0 0 2px 1px var(--theme-foreground-icon);
      margin: 0 2px;
      font-size: small;
      background: #eee;
      color: #222;
      font-variant: small-caps;
      font-weight: 600;
      letter-spacing: 0.5px;
      line-height: 1em;
      @media print {
        background: #fff !important;
        color: #000 !important;
        box-shadow: none !important;
        border: 2px solid #888 !important;
      }
      &:hover {
        color: #000;
        box-shadow: 0 0 2px 2px var(--theme-foreground-icon);
      }
    }

    code:not([is]) {
      display: inline-block;
      padding: 0 2px;
      margin: 0 2px;
      border: 1px solid;
      border-radius: 2px;
      vertical-align: text-bottom;
      color: var(--theme-accent-text);
      @media print {
        border: var(--theme-accent-darker) solid 1px;
      }
    }

    img {
      max-width: 100%;
    }

    figure {
      margin: 1em auto 0.75em;
      min-width: 240px;
      display: table;
      page-break-inside: avoid;
      img {
        display: block;
        margin: auto;
      }
      > figcaption {
        display: table-caption;
        caption-side: bottom;
      }
    }

    figcaption,
    caption {
      text-align: center;
      margin: 0.3em auto;
      font-weight: bolder;
      font-size: 14px;
    }
    caption {
      page-break-after: avoid;
    }
    figcaption {
      page-break-before: avoid;
    }

    pre {
      padding: 2em 0.5em 1em;
      margin: 1.2em 0;
      border-radius: 4px;
      position: relative;
      contain: content;
      &[title]::before {
        content: attr(title);
      }
      @media print {
        background-color: white !important;
      }
    }
    code[is='md-highlight'] {
      font-size: $body-font-size;
      @media print {
        white-space: pre-wrap;
      }
      &[language]::before {
        content: attr(language);
        text-transform: uppercase;
        color: var(--theme-foreground-secondary-text);
        text-align: right;
      }
    }
    pre::before,
    code[is='md-highlight']::before {
      font-size: 0.8em;
      position: sticky;
      display: block;
      left: 0;
      height: 0;
      transform: translateY(-2em);
    }

    pre-md-mermaid,
    pre-md-chart {
      display: block;
      overflow-x: auto;
      position: relative;
      margin: 1em 0;
      page-break-inside: avoid;
      > * {
        display: block;
        margin: auto;
      }

      svg * {
        user-select: none;
      }
    }

    // embed videos
    .block-embed {
      display: flex;
      width: 100%;
      max-width: 720px;
      user-select: none;
      margin: 1em auto;
      page-break-inside: avoid;
      @media screen {
        &::before {
          display: block;
          padding-bottom: 60%;
          content: '';
        }
      }
      > * {
        flex: auto;
      }
      .block-embed-hint {
        display: none;
      }

      @media print {
        > * {
          display: none;
        }
        .block-embed-hint {
          display: block;
          text-decoration: $theme underline;
        }
      }
    }

    dl,
    blockquote,
    [is='md-container'],
    details {
      position: relative;
      margin: 1em 0;
      padding: 0 12px 0 20px;
      page-break-inside: avoid;
      &::before {
        user-select: none;
        position: absolute;
        transform: translate(-32px, 8px);
        width: 20px;
        height: 20px;
        border-radius: 100%;
        text-align: center;
        line-height: 20px;
        font-weight: bold;
        font-size: 14px;
      }
    }
    [is='md-container'] {
      &[class~='info'] {
        @include quote-color(mat.$blue-palette, 'i');
      }
      &[class~='warning'] {
        @include quote-color(mat.$orange-palette, '!');
      }
      &[class~='error'] {
        @include quote-color(mat.$red-palette, 'â');
      }
      &[class~='success'] {
        @include quote-color(mat.$light-green-palette, 'â');
      }
      &[class~='fail'] {
        @include quote-color(mat.$red-palette, 'â');
      }
      &[class~='question'] {
        @include quote-color(mat.$amber-palette, '?');
      }
    }
    dl {
      @include quote-color(mat.$teal-palette);
    }

    [is='md-container'] > summary {
      display: block;
    }

    dt,
    summary {
      font-size: 1.2em;
      font-weight: bolder;
    }

    dd {
      margin-left: 1em;
    }

    // footnotes
    a.footnote-ref {
      &::before {
        content: '[';
        vertical-align: initial;
      }
      &::after {
        content: ']';
        vertical-align: initial;
      }
      user-select: none;
      display: inline-block;
      vertical-align: super;
      font-size: smaller;
      padding: 1px;
      text-decoration: none !important;
    }
    footer.footnotes {
      border-top: 1px solid var(--theme-foreground-divider);
      margin: 3em -8px 1em;
      padding: 0 8px;
    }
    ol.footnotes-list {
      margin: 1em 0;
      counter-reset: footnotes;
      list-style: none;
    }
    li.footnote-item {
      margin: 0.8em 0;
      counter-increment: footnotes;
      position: relative;
      &::before {
        text-align: end;
        position: absolute;
        transform: translateX(calc(-100% - 0.5em));
        content: '[' counter(footnotes) ']';
      }
      p {
        margin: 0.5em 0;
      }
    }
    a.footnote-backref {
      user-select: none;
      display: inline-block;
      margin: 4px;
      &::before {
        content: 'â©\fe0e';
      }
      @media print {
        display: none;
      }
    }

    // table
    table {
      min-width: 240px;
      border-spacing: 0;
      border-collapse: collapse;
      margin: 1.2em auto;
      text-align: left;
      &[id] {
        margin-top: 0.9em;
      }
      th {
        min-width: 60px;
      }
      td,
      th {
        line-height: 1.5em;
        padding: 0.4em 0.8em;
      }
      > tbody:not(:first-child) > tr:first-of-type > td {
        border-top-width: 2px;
      }
      > thead > tr:last-of-type > th {
        border-bottom-width: 2px;
        @media screen {
          position: sticky;
          z-index: 100;
          font-weight: bold;
          top: 0;
        }
        @media print {
          > thead > tr > th,
          > tbody > tr > td {
            background-color: white !important;
          }
        }
      }
    }

    hr {
      margin: 0.5em auto;
      border: 1px inset var(--theme-foreground-divider);
    }
  }

  @include markdown-color($config);
}
