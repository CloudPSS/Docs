name: release

on:
  push:
    tags: ['*']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: 14
      - name: Install
        uses: bahmutov/npm-install@v1.1.0
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | sed -e 's/\./_/g')
      - name: Build for docs.cloudpss.net
        run: |
          yarn build:main
          rm -f dist/stats.json
          tar -cJvf dist.tar.xz -C ./dist .
          ls -l dist.tar.xz
      - name: Build for standalone
        run: |
          yarn build:standalone
          rm -f dist/stats.json
          sed -i 's/__VERSION__/${{ steps.get_version.outputs.VERSION }}/g' deb/DEBIAN/control
          cp -r dist/ deb/usr/share/cloudpss/static/docs/
          dpkg-deb --build deb .
          ls -l *.deb
      - name: Upload Release Asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: dist.tar.xz,*.deb
          prerelease: ${{ contains(github.event.ref, '-') }}
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.DC_HOST }}
          port: ${{ secrets.DC_PORT }}
          user: ${{ secrets.DC_USER }}
          key: ${{ secrets.DC_KEY }}
          connect_timeout: 600s
          first_ssh: |
            rm -f /root/docs/dist.tar.xz
          scp: |
            './dist.tar.xz' => /root/docs/
          last_ssh: |
            source /root/.profile
            rm -rf /root/docs/${{ steps.get_version.outputs.VERSION }}
            mkdir -p /root/docs/${{ steps.get_version.outputs.VERSION }}
            tar -xJvf /root/docs/dist.tar.xz -C /root/docs/${{ steps.get_version.outputs.VERSION }}
            gzipper c --exclude map,jpeg,jpg,png,gif,ico,mp3,mp4,mkv --gzip-level 9 --remove-larger /root/docs/${{ steps.get_version.outputs.VERSION }}
            gzipper c --exclude map,jpeg,jpg,png,gif,ico,mp3,mp4,mkv --brotli --remove-larger /root/docs/${{ steps.get_version.outputs.VERSION }}
            rm -f /root/docs/latest
            ln -s /root/docs/${{ steps.get_version.outputs.VERSION }} /root/docs/latest
            rm -f /root/docs/dist.tar.xz
            systemctl reload caddy
            ls -l
      - name: Release
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        if: ${{ !contains(steps.get_version.outputs.VERSION, '-') }}
        with:
          host: ${{ secrets.DC_HOST }}
          port: ${{ secrets.DC_PORT }}
          user: ${{ secrets.DC_USER }}
          key: ${{ secrets.DC_KEY }}
          connect_timeout: 600s
          first_ssh: |
            rm -f /root/docs/release
            ln -s /root/docs/${{ steps.get_version.outputs.VERSION }} /root/docs/release
            systemctl reload caddy
            ls -l
